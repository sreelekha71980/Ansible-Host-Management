---
- name: Fetch Logon Information and Send Email
  hosts: all
  gather_facts: false
  vars:
    output_csv_path: "/tmp/logon_info.csv"
  tasks:
    - name: Get Logon Information
      win_shell: |
        $startDate = (Get-Date).AddDays(-3)
        $excludedUsers = @('DWM', 'LOCAL SERVICE', 'NETWORK SERVICE', 'SYSTEM', 'UMFD')
        
        $loginInfo = Get-WinEvent -FilterHashtable @{
            LogName='Security';
            Id=4624;
            StartTime=$startDate
        } | Where-Object { 
            ($_.Properties[8].Value -eq 2 -or $_.Properties[8].Value -eq 10) -and
            $_.Properties[5].Value -notmatch "($([string]::Join('|', $excludedUsers)))"
        } | Select-Object @{
            Name='Login-Date'; Expression={$_.TimeCreated.ToString("yyyy-MM-dd")}
        }, @{
            Name='Login-Time'; Expression={$_.TimeCreated.ToString("HH:mm:ss")}
        }, MachineName, @{
            Name='User'; Expression={$_.Properties[5].Value}
        }, @{
            Name='LogonType'; Expression={
                switch ($_.Properties[8].Value) {
                    2 { 'LocalInteractive' }
                    3 { 'Network' }
                    4 { 'Batch' }
                    5 { 'Service' }
                    7 { 'Unlock' }
                    8 { 'NetworkCleartext' }
                    9 { 'NewCredentials' }
                    10 { 'RemoteInteractive' }
                    11 { 'CachedInteractive' }
                    default { $_.Properties[8].Value }
                }
            }
        }, @{
            Name='Source-IP'; Expression={$_.Properties[18].Value}
        } | Format-Table

        $loginInfo
      register: result
#     delegate_to: localhost
    - name: Save output result to a file
      copy:
        content: "{{ result.stdout_lines }}"
        dest: "/tmp/output-202401091103.csv"                                                         
#    - name: Display result to Console
#      debug:
#        var: result.stdout_lines
#    - name: Template CSV file
#      ansible.builtin.template:
#        src: templates/output_template.csv.j2
#        dest: /tmp/output-202401091103.csv
#      vars:
#        registered_output: "{{ result.stdout_lines }}" 